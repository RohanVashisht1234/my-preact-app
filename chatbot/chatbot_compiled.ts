// This source code was auto-generated by ./src/compiler.zig
export default function analyze(user_input:string): string {
    if(user_input.includes('how') && user_input.includes('you') && user_input.includes('you')) {
        return "I am fine, thanks!";
    }
    if(user_input.includes('hello') && user_input.includes('how') && user_input.includes('are')) {
        return "Hello! I'm here to assist you with your Zig programming needs.";
    }
    if(user_input.includes('hi') && user_input.includes('there') && user_input.includes('help')) {
        return "Hi there! How can I help you today?";
    }
    if(user_input.includes('good') && user_input.includes('morning') && user_input.includes('hello')) {
        return "Good morning! What can I do for you?";
    }
    if(user_input.includes('good') && user_input.includes('afternoon') && user_input.includes('hi')) {
        return "Good afternoon! Need any help with Zig libraries?";
    }
    if(user_input.includes('good') && user_input.includes('evening') && user_input.includes('help')) {
        return "Good evening! How can I assist you with Zig today?";
    }
    if(user_input.includes('hey') && user_input.includes('how') && user_input.includes('you')) {
        return "Hey! I'm doing great, how about you?";
    }
    if(user_input.includes('how') && user_input.includes('is') && user_input.includes('it')) {
        return "It's going well! How can I assist you today?";
    }
    if(user_input.includes('what') && user_input.includes('can') && user_input.includes('you')) {
        return "I'm here to help you find Zig libraries and provide information about them.";
    }
    if(user_input.includes('how') && user_input.includes('can') && user_input.includes('you')) {
        return "You can ask me about Zig libraries, documentation, and community resources.";
    }
    if(user_input.includes('can') && user_input.includes('you') && user_input.includes('help')) {
        return "Yes, I can help you with Zig libraries and related questions.";
    }
    if(user_input.includes('what') && user_input.includes('is') && user_input.includes('your')) {
        return "I'm a chatbot designed to assist with Zig programming language queries.";
    }
    if(user_input.includes('who') && user_input.includes('are') && user_input.includes('you')) {
        return "I'm a Zig language assistant here to help you with your programming needs.";
    }
    if(user_input.includes('what') && user_input.includes('are') && user_input.includes('you')) {
        return "I'm a virtual assistant for Zig programming language resources.";
    }
    if(user_input.includes('tell') && user_input.includes('me') && user_input.includes('about')) {
        return "Sure, what specifically would you like to know about Zig?";
    }
    if(user_input.includes('do') && user_input.includes('you') && user_input.includes('know')) {
        return "Yes, I have information on various Zig libraries and resources.";
    }
    if(user_input.includes('can') && user_input.includes('you') && user_input.includes('tell')) {
        return "Of course! What do you need to know about Zig?";
    }
    if(user_input.includes('what') && user_input.includes('is') && user_input.includes('the')) {
        return "You can find detailed information about Zig on their [official website](https";
    }
    if(user_input.includes('how') && user_input.includes('do') && user_input.includes('i ')) {
        return "You can get started with Zig by following their [official tutorials](https";
    }
    if(user_input.includes('where') && user_input.includes('can') && user_input.includes('i ')) {
        return "You can find Zig libraries on [Zigistry](https";
    }
    if(user_input.includes('which') && user_input.includes('library') && user_input.includes('for')) {
        return "Can you tell me more about your project? I can suggest the best Zig library for it.";
    }
    if(user_input.includes('what') && user_input.includes('are') && user_input.includes('the')) {
        return "Zig has many features including performance optimizations and a powerful compiler.";
    }
    if(user_input.includes('why') && user_input.includes('should') && user_input.includes('i ')) {
        return "Zig is great for systems programming due to its performance and safety features.";
    }
    if(user_input.includes('when') && user_input.includes('is') && user_input.includes('the')) {
        return "The latest version of Zig was released recently. Check their [blog](https";
    }
    if(user_input.includes('is') && user_input.includes('zig') && user_input.includes('good')) {
        return "Yes, Zig is excellent for high-performance systems programming.";
    }
    if(user_input.includes('can') && user_input.includes('i ') && user_input.includes('learn')) {
        return "Absolutely! You can start with the [official tutorials](https";
    }
    if(user_input.includes('do') && user_input.includes('you') && user_input.includes('have')) {
        return "Yes, I have information on various Zig libraries and tools.";
    }
    if(user_input.includes('is') && user_input.includes('there') && user_input.includes('a')) {
        return "You can find a list of Zig libraries on [Zigistry](https";
    }
    if(user_input.includes('what') && user_input.includes('does') && user_input.includes('zig')) {
        return "Zig focuses on providing robust, high-performance systems programming capabilities.";
    }
    if(user_input.includes('how') && user_input.includes('does') && user_input.includes('zig')) {
        return "Zig offers a powerful compiler and manual memory management for efficient programming.";
    }
    if(user_input.includes('who') && user_input.includes('uses') && user_input.includes('zig')) {
        return "Many developers use Zig for its performance and modern features.";
    }
    if(user_input.includes('where') && user_input.includes('is') && user_input.includes('zig')) {
        return "Zig is available for download on their [official website](https";
    }
    if(user_input.includes('is') && user_input.includes('zig') && user_input.includes('easy')) {
        return "Zig's syntax is designed to be easy to read and write.";
    }
    if(user_input.includes('how') && user_input.includes('do') && user_input.includes('install')) {
        return "You can install Zig by following the instructions on their [download page](https";
    }
    if(user_input.includes('can') && user_input.includes('i ') && user_input.includes('use')) {
        return "Yes, Zig supports multiple platforms including Windows, Linux, and macOS.";
    }
    if(user_input.includes('how') && user_input.includes('do') && user_input.includes('i ')) {
        return "You can update Zig by downloading the latest version from their website.";
    }
    if(user_input.includes('what') && user_input.includes('is') && user_input.includes('new')) {
        return "The latest updates in Zig can be found on their [official blog](https";
    }
    if(user_input.includes('do') && user_input.includes('i ') && user_input.includes('need')) {
        return "You need a basic understanding of programming to start with Zig.";
    }
    if(user_input.includes('can') && user_input.includes('you') && user_input.includes('explain')) {
        return "Sure, I can explain various aspects of Zig. What do you need help with?";
    }
    if(user_input.includes('how') && user_input.includes('do') && user_input.includes('start')) {
        return "Start by downloading Zig and following their [tutorials](https";
    }
    if(user_input.includes('what') && user_input.includes('resources') && user_input.includes('what')) {
        return "You can find Zig resources on their [documentation page](https";
    }
    if(user_input.includes('do') && user_input.includes('you') && user_input.includes('recommend')) {
        return "I recommend starting with the official Zig documentation and tutorials.";
    }
    if(user_input.includes('what') && user_input.includes('you') && user_input.includes('do')) {
        return "I help people find zig lang libraries as per their needs, what are your needs?";
    }
    if(user_input.includes('gui') && user_input.includes('gui') && user_input.includes('lib')) {
        return "I know about some of most famous web libraries made in zig like";
    }
    if(user_input.includes('latest') && user_input.includes('latest') && user_input.includes('lib')) {
        return "The Zig libs are being released so often that its difficult to tell about them, you can see the latest section of [Zigistry](https";
    }
    if(user_input.includes('games') && user_input.includes('games') && user_input.includes('lib')) {
        return "I know about some of most famous web libraries made in zig like";
    }
    if(user_input.includes('web') && user_input.includes('web') && user_input.includes('lib')) {
        return "I know about some of most famous web libraries made in zig like";
    }
    if(user_input.includes('how') && user_input.includes('do') && user_input.includes('you')) {
        return "Just searching latest zig libs.";
    }
    if(user_input.includes('zig') && user_input.includes('performance') && user_input.includes('zig')) {
        return "Zig programming language is great at performance.";
    }
    if(user_input.includes('compiler') && user_input.includes('zig') && user_input.includes('info')) {
        return "Zig has a powerful compiler that offers advanced optimizations.";
    }
    if(user_input.includes('package') && user_input.includes('zig') && user_input.includes('management')) {
        return "Zig provides a robust package management system.";
    }
    if(user_input.includes('standard') && user_input.includes('zig') && user_input.includes('library')) {
        return "The Zig standard library is extensive and well-documented.";
    }
    if(user_input.includes('documentation') && user_input.includes('zig') && user_input.includes('access')) {
        return "You can find Zig's documentation on their [official website](https";
    }
    if(user_input.includes('tutorials') && user_input.includes('zig') && user_input.includes('learning')) {
        return "Check out the [official tutorials](https";
    }
    if(user_input.includes('community') && user_input.includes('zig') && user_input.includes('forum')) {
        return "The Zig community is active on [Zig's subreddit](https";
    }
    if(user_input.includes('syntax') && user_input.includes('zig') && user_input.includes('guide')) {
        return "Zig has clear and concise syntax, making it easy to read and write.";
    }
    if(user_input.includes('memory') && user_input.includes('zig') && user_input.includes('management')) {
        return "Zig provides manual memory management with a focus on safety.";
    }
    if(user_input.includes('error') && user_input.includes('zig') && user_input.includes('handling')) {
        return "Zig's error handling is designed to be simple and effective.";
    }
    if(user_input.includes('build') && user_input.includes('zig') && user_input.includes('system')) {
        return "Zig's build system is highly customizable and powerful.";
    }
    if(user_input.includes('cross') && user_input.includes('zig') && user_input.includes('compilation')) {
        return "Zig supports cross-compilation out of the box.";
    }
    if(user_input.includes('testing') && user_input.includes('zig') && user_input.includes('framework')) {
        return "Zig has built-in support for testing frameworks.";
    }
    if(user_input.includes('ecosystem') && user_input.includes('zig') && user_input.includes('growth')) {
        return "Zig's ecosystem is growing rapidly with new libraries and tools.";
    }
    if(user_input.includes('async') && user_input.includes('zig') && user_input.includes('programming')) {
        return "Zig supports async programming natively.";
    }
    if(user_input.includes('ffi') && user_input.includes('zig') && user_input.includes('interop')) {
        return "Zig has excellent FFI capabilities for interoperability with C.";
    }
    if(user_input.includes('types') && user_input.includes('zig') && user_input.includes('safety')) {
        return "Zig offers strong typing to ensure code safety and reliability.";
    }
    if(user_input.includes('performance') && user_input.includes('zig') && user_input.includes('optimizations')) {
        return "Zig's performance optimizations make it ideal for systems programming.";
    }
    if(user_input.includes('security') && user_input.includes('zig') && user_input.includes('features')) {
        return "Zig includes security features to prevent common vulnerabilities.";
    }
    if(user_input.includes('portable') && user_input.includes('zig') && user_input.includes('code')) {
        return "Zig allows you to write portable code that runs on multiple platforms.";
    }
    if(user_input.includes('concurrency') && user_input.includes('zig') && user_input.includes('model')) {
        return "Zig has a robust concurrency model for parallel programming.";
    }
    if(user_input.includes('debugging') && user_input.includes('zig') && user_input.includes('tools')) {
        return "Zig provides powerful tools for debugging and profiling.";
    }
    if(user_input.includes('version') && user_input.includes('zig') && user_input.includes('control')) {
        return "Zig has a built-in version control system.";
    }
    if(user_input.includes('integration') && user_input.includes('zig') && user_input.includes('tools')) {
        return "Zig integrates well with other development tools and environments.";
    }
    if(user_input.includes('libraries') && user_input.includes('zig') && user_input.includes('development')) {
        return "Zig has a growing number of libraries for various development needs.";
    }
    if(user_input.includes('framework') && user_input.includes('zig') && user_input.includes('options')) {
        return "Zig offers several frameworks for different types of applications.";
    }
    if(user_input.includes('io') && user_input.includes('zig') && user_input.includes('performance')) {
        return "Zig's I/O performance is optimized for speed and efficiency.";
    }
    if(user_input.includes('platforms') && user_input.includes('zig') && user_input.includes('support')) {
        return "Zig supports multiple platforms including Windows, Linux, and macOS.";
    }
    if(user_input.includes('releases') && user_input.includes('zig') && user_input.includes('info')) {
        return "Stay updated with the latest Zig releases on their [official blog](https";
    }
    if(user_input.includes('builds') && user_input.includes('zig') && user_input.includes('continuous')) {
        return "Zig supports continuous integration and deployment workflows.";
    }
    if(user_input.includes('modules') && user_input.includes('zig') && user_input.includes('creation')) {
        return "Creating modules in Zig is straightforward and well-documented.";
    }
    if(user_input.includes('features') && user_input.includes('zig') && user_input.includes('overview')) {
        return "Zig has a wide range of features suitable for systems programming.";
    }
    if(user_input.includes('community') && user_input.includes('zig') && user_input.includes('events')) {
        return "Zig hosts various community events and meetups.";
    }
    if(user_input.includes('contributions') && user_input.includes('zig') && user_input.includes('open')) {
        return "Zig welcomes contributions from the community to improve the language and tools.";
    }
    if(user_input.includes('what') && user_input.includes('is') && user_input.includes('zig')) {
        return "Zig is a general-purpose programming language designed for robustness, optimality, and clarity. It focuses on providing developers with precise control over system resources while maintaining a straightforward and readable syntax.";
    }
    if(user_input.includes('hello') && user_input.includes('hello') && user_input.includes('hello')) {
        return "Hey!";
    }
    if(user_input.includes('hi') && user_input.includes('hi') && user_input.includes('hi')) {
        return "Hello!";
    }
    if(user_input.includes('yo') && user_input.includes('yo') && user_input.includes('yo')) {
        return "Yo!";
    }
    if(user_input.includes('howdy') && user_input.includes('howdy') && user_input.includes('howdy')) {
        return "I am fine!";
    }
    return "Sorry, i didn't understand what you said, could you please re-send it in a better way.";
}
