---
import Navigation from "../components/Navigation";
import Foot from "../components/Foot.astro";
import "../styles/globals.css";
import "zilite/dist/darkMode.css";
import ProgressBar from "astro-vtbot/components/ProgressBar.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/zigistry.ico" />
    <link rel="canonical" href="https://zigistry.dev/" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Primary Meta Tags -->
    <title>Zigistry: A package registry and manager for Zig</title>
    <meta
      name="description"
      content="Zigistry is your go-to registry for Zig programming language libraries and packages. Find, share, and contribute to Zig packages easily. Join the Zig community now!"
    />
    <meta
      name="keywords"
      content="Zigistry, Zig programming language, Zig libraries, Zig packages, package registry, open-source Zig, Zig community, package manager, contribute to Zig"
    />
    <meta name="author" content="Rohan Vashisht" />
    <meta name="generator" content={Astro.generator} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://zigistry.dev/" />
    <meta
      property="og:title"
      content="Zigistry: A package registry and manager for Zig"
    />
    <meta
      property="og:description"
      content="Explore Zig programming language programs and packages on Zigistry. Find, share, and contribute to the Zig community."
    />
    <meta
      property="og:image"
      content="https://zigistry.dev/zigistry-social.jpg"
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://zigistry.dev/" />
    <meta
      property="twitter:title"
      content="Zigistry: Discover & Contribute to Zig Libraries & Packages"
    />
    <meta
      property="twitter:description"
      content="Explore Zig programming language programs and packages on Zigistry. Find, share, and contribute to the Zig community."
    />
    <meta
      property="twitter:image"
      content="https://zigistry.dev/zigistry-social.jpg"
    />

    <!-- JSON-LD Structured Data -->
    <script is:inline type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Zigistry",
        "url": "https://zigistry.dev/",
        "description": "Zigistry is your go-to registry for Zig programming language libraries and packages.",
        "author": {
          "@type": "Person",
          "name": "Rohan Vashisht"
        }
      }
    </script>
  </head>
  <body class="bg-white dark:bg-[rgb(31,41,55)] dark:text-white">
    <Navigation client:load />
    <ProgressBar />
    <slot />
    <Foot />
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      var themeToggleDarkIcon = document.getElementById(
        "theme-toggle-dark-icon"
      );
      var themeToggleLightIcon = document.getElementById(
        "theme-toggle-light-icon"
      );

      // Change the icons inside the button based on previous settings
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        themeToggleLightIcon.classList.remove("hidden");
      } else {
        themeToggleDarkIcon.classList.remove("hidden");
      }

      var themeToggleBtn = document.getElementById("theme-toggle");

      themeToggleBtn.addEventListener("click", function () {
        // toggle icons inside button
        themeToggleDarkIcon.classList.toggle("hidden");
        themeToggleLightIcon.classList.toggle("hidden");

        // if set via local storage previously
        if (localStorage.getItem("color-theme")) {
          if (localStorage.getItem("color-theme") === "light") {
            document.documentElement.classList.add("dark");
            localStorage.setItem("color-theme", "dark");
          } else {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("color-theme", "light");
          }

          // if NOT set via local storage previously
        } else {
          if (document.documentElement.classList.contains("dark")) {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("color-theme", "light");
          } else {
            document.documentElement.classList.add("dark");
            localStorage.setItem("color-theme", "dark");
          }
        }
      });
    </script>
  </body>
</html>
